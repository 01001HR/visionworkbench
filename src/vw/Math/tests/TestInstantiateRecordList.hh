// __BEGIN_LICENSE__
// Copyright (C) 2006, 2007 United States Government as represented by
// the Administrator of the National Aeronautics and Space Administration.
// All Rights Reserved.
// __END_LICENSE__


template struct vw::math::Accumulator<AccumT, FuncT>;
//template struct vw::math::ArgAbsFunctor::result<Args>;
template struct vw::math::ArgUnaryFunctorType<F, T>;
template struct vw::math::ArgUnaryFunctorTypeHelper<FuncT, ArgT, ArgIsCompound>;
template struct vw::math::ArgUnaryFunctorTypeHelper<FuncT, ArgT, true>;
template struct vw::math::ArgValAtan2Functor<ValT>;
template struct vw::math::ArgValCopysignFunctor<ValT>;
template struct vw::math::ArgValFdimFunctor<ValT>;
template struct vw::math::ArgValHypotFunctor<ValT>;
template struct vw::math::ArgValPowFunctor<ValT>;
template class  vw::math::BBox<RealT, 0>;
//template class  vw::math::BBox<RealT, DimN>;
//template class  vw::math::BBoxBase<BBoxT, RealT, DimN>;
template struct vw::math::BinaryFunctorType<FuncT, Arg1T, Arg2T>;
template struct vw::math::BinaryFunctorTypeHelper<FuncT, Arg1T, Arg2T, Arg1IsCompound, Arg2IsCompound>;
template struct vw::math::BinaryFunctorTypeHelper<FuncT, Arg1T, Arg2T, false, true>;
template struct vw::math::BinaryFunctorTypeHelper<FuncT, Arg1T, Arg2T, true, false>;
template struct vw::math::BinaryFunctorTypeHelper<FuncT, Arg1T, Arg2T, true, true>;
template class  vw::math::DiscriminatorCompare<ContainerT>;
template class  vw::math::DisjointSet<ElemT>;
template class  vw::math::IndexingMatrixIterator<MatrixT>;
template class  vw::math::KDTree<FileT>;
template struct vw::math::LeastSquaresModelBase<ImplT>;
template class  vw::math::Matrix<ElemT, 0, 0>;
template class  vw::math::Matrix<ElemT, RowsN, ColsN>;
template struct vw::math::MatrixBase<MatrixT>;
template class  vw::math::MatrixBinaryFunc<Matrix1T, Matrix2T, FuncT>;
template class  vw::math::MatrixCol<MatrixT>;
template class  vw::math::MatrixCol<const vw::math::Matrix<double, 2, 2> >::Iterator<IterT>;
template class  vw::math::MatrixCol<const vw::math::Matrix<double, 3, 3> >::Iterator<IterT>;
template class  vw::math::MatrixCol<const vw::math::Matrix<float, 0, 0> >::Iterator<IterT>;
template class  vw::math::MatrixCol<const vw::math::Matrix<float, 3, 3> >::Iterator<IterT>;
template class  vw::math::MatrixCol<vw::math::Matrix<double, 3, 4> >::Iterator<IterT>;
template class  vw::math::MatrixCol<vw::math::Matrix<std::complex<double>, 4, 4> >::Iterator<IterT>;
template struct vw::math::MatrixCols<MatrixT>;
template class  vw::math::MatrixMatrixProduct<Matrix1T, Matrix2T, Transpose1N, Transpose2N>;
template struct vw::math::MatrixMatrixProduct<vw::math::Matrix<double, 0, 0>, vw::math::Matrix<double, 0, 0>, false, false>::MatrixClosure<MatT>;
template struct vw::math::MatrixMatrixProduct<vw::math::Matrix<double, 0, 0>, vw::math::MatrixTranspose<vw::math::Matrix<double, 0, 0> >, false, false>::MatrixClosure<MatT>;
template struct vw::math::MatrixMatrixProduct<vw::math::Matrix<double, 3, 3>, vw::math::Matrix<double, 3, 3>, false, false>::MatrixClosure<MatT>;
template struct vw::math::MatrixMatrixProduct<vw::math::Matrix<double, 3, 3>, vw::math::Matrix<double, 3, 4>, false, false>::MatrixClosure<MatT>;
template struct vw::math::MatrixMatrixProduct<vw::math::Matrix<double, 3, 3>, vw::math::MatrixUnaryFunc<vw::math::Matrix<double, 3, 3>, vw::ArgNegationFunctor>, false, false>::MatrixClosure<MatT>;
template struct vw::math::MatrixMatrixProduct<vw::math::Matrix<float, 0, 0>, vw::math::Matrix<float, 0, 0>, false, false>::MatrixClosure<MatT>;
template struct vw::math::MatrixMatrixProduct<vw::math::MatrixMatrixProduct<vw::math::Matrix<double, 0, 0>, vw::math::MatrixTranspose<vw::math::Matrix<double, 0, 0> >, false, false>, vw::math::Matrix<double, 0, 0>, false, false>::MatrixClosure<MatT>;
template struct vw::math::MatrixMatrixProduct<vw::math::MatrixMatrixProduct<vw::math::Matrix<double, 3, 3>, vw::math::Matrix<double, 3, 3>, false, false>, vw::math::Matrix<double, 3, 3>, false, false>::MatrixClosure<MatT>;
template struct vw::math::MatrixMatrixProduct<vw::math::MatrixTranspose<vw::math::Matrix<double, 0, 0> >, vw::math::Matrix<double, 0, 0>, false, false>::MatrixClosure<MatT>;
template class  vw::math::MatrixNoTmp<MatrixT>;
template class  vw::math::MatrixProxy<ElemT, 0, 0>;
template class  vw::math::MatrixProxy<ElemT, RowsN, ColsN>;
template class  vw::math::MatrixRow<MatrixT>;
template struct vw::math::MatrixRows<MatrixT>;
template class  vw::math::MatrixTranspose<MatrixT>;
template class  vw::math::MatrixUnaryFunc<MatrixT, FuncT>;
template class  vw::math::MatrixVectorProduct<MatrixT, VectorT, TransposeN>;
template struct vw::math::MatrixVectorProduct<vw::math::Matrix<double, 0, 0>, const vw::math::VectorUnaryFunc<vw::math::Vector<double, 0>, vw::ValArgProductFunctor<double> >, true>::MatrixClosure<MatT>;
template struct vw::math::MatrixVectorProduct<vw::math::Matrix<double, 0, 0>, const vw::math::VectorUnaryFunc<vw::math::Vector<double, 0>, vw::ValArgProductFunctor<double> >, true>::VectorClosure<VecT>;
template struct vw::math::MatrixVectorProduct<vw::math::Matrix<double, 0, 0>, vw::math::Vector<double, 2>, true>::MatrixClosure<MatT>;
template struct vw::math::MatrixVectorProduct<vw::math::Matrix<double, 0, 0>, vw::math::Vector<double, 2>, true>::VectorClosure<VecT>;
template struct vw::math::MatrixVectorProduct<vw::math::Matrix<double, 2, 2>, const vw::math::VectorUnaryFunc<vw::math::Vector<double, 2>, vw::ValArgProductFunctor<double> >, true>::MatrixClosure<MatT>;
template struct vw::math::MatrixVectorProduct<vw::math::Matrix<double, 2, 2>, const vw::math::VectorUnaryFunc<vw::math::Vector<double, 2>, vw::ValArgProductFunctor<double> >, true>::VectorClosure<VecT>;
template struct vw::math::MatrixVectorProduct<vw::math::Matrix<double, 2, 2>, vw::math::Vector<double, 2>, false>::MatrixClosure<MatT>;
template struct vw::math::MatrixVectorProduct<vw::math::Matrix<double, 2, 2>, vw::math::Vector<double, 2>, false>::VectorClosure<VecT>;
template struct vw::math::MatrixVectorProduct<vw::math::Matrix<double, 3, 3>, vw::math::Vector<double, 3>, false>::MatrixClosure<MatT>;
template struct vw::math::MatrixVectorProduct<vw::math::Matrix<double, 3, 3>, vw::math::Vector<double, 3>, false>::VectorClosure<VecT>;
template struct vw::math::MatrixVectorProduct<vw::math::Matrix<float, 3, 3>, vw::math::Vector<float, 3>, false>::MatrixClosure<MatT>;
template struct vw::math::MatrixVectorProduct<vw::math::Matrix<float, 3, 3>, vw::math::Vector<float, 3>, false>::VectorClosure<VecT>;
template struct vw::math::MatrixVectorProduct<vw::math::MatrixMatrixProduct<vw::math::Matrix<double, 3, 3>, vw::math::MatrixUnaryFunc<vw::math::Matrix<double, 3, 3>, vw::ArgNegationFunctor>, false, false>, vw::math::Vector<double, 3>, false>::MatrixClosure<MatT>;
template struct vw::math::MatrixVectorProduct<vw::math::MatrixMatrixProduct<vw::math::Matrix<double, 3, 3>, vw::math::MatrixUnaryFunc<vw::math::Matrix<double, 3, 3>, vw::ArgNegationFunctor>, false, false>, vw::math::Vector<double, 3>, false>::VectorClosure<VecT>;
template struct vw::math::MatrixVectorProduct<vw::math::MatrixMatrixProduct<vw::math::MatrixMatrixProduct<vw::math::Matrix<double, 0, 0>, vw::math::MatrixTranspose<vw::math::Matrix<double, 0, 0> >, false, false>, vw::math::Matrix<double, 0, 0>, false, false>, vw::math::SubVector<vw::math::Vector<double, 0> >, false>::MatrixClosure<MatT>;
template struct vw::math::MatrixVectorProduct<vw::math::MatrixMatrixProduct<vw::math::MatrixMatrixProduct<vw::math::Matrix<double, 0, 0>, vw::math::MatrixTranspose<vw::math::Matrix<double, 0, 0> >, false, false>, vw::math::Matrix<double, 0, 0>, false, false>, vw::math::SubVector<vw::math::Vector<double, 0> >, false>::VectorClosure<VecT>;
template struct vw::math::MatrixVectorProduct<vw::math::MatrixMatrixProduct<vw::math::MatrixTranspose<vw::math::Matrix<double, 0, 0> >, vw::math::Matrix<double, 0, 0>, false, false>, vw::math::Vector<double, 0>, false>::MatrixClosure<MatT>;
template struct vw::math::MatrixVectorProduct<vw::math::MatrixMatrixProduct<vw::math::MatrixTranspose<vw::math::Matrix<double, 0, 0> >, vw::math::Matrix<double, 0, 0>, false, false>, vw::math::Vector<double, 0>, false>::VectorClosure<VecT>;
template class  vw::math::MeanAccumulator<ValT>;
template class  vw::math::MedianAccumulator<ValT>;
template class  vw::math::MinMaxAccumulator<ValT>;
template class  vw::math::Quaternion<ElemT>;
template class  vw::math::QuaternionBase<QuaternionT>;
//template class  vw::math::RandomSampleConsensus<FittingFuncT, ErrorFuncT>;
template class  vw::math::RegionRecordConstraintKD<RangeT>;
template class  vw::math::Simplex<FuncT, DomainT>;
template class  vw::math::StdDevAccumulator<ValT>;
template struct vw::math::StdMathType2<T1, T2>;
template struct vw::math::StdMathType<T>;
template class  vw::math::SubMatrix<MatrixT>;
template class  vw::math::SubVector<VectorT>;
template struct vw::math::ValArgAtan2Functor<ValT>;
template struct vw::math::ValArgCopysignFunctor<ValT>;
template struct vw::math::ValArgFdimFunctor<ValT>;
template struct vw::math::ValArgHypotFunctor<ValT>;
template struct vw::math::ValArgPowFunctor<ValT>;
template class  vw::math::Vector<ElemT, 0>;
template class  vw::math::Vector<ElemT, SizeN>;
template struct vw::math::VectorAssignImpl<DstVecT, SrcVecT>;
template struct vw::math::VectorAssignImpl<vw::math::Vector<DstElemT, 2>, SrcVecT>;
template struct vw::math::VectorAssignImpl<vw::math::Vector<DstElemT, 3>, SrcVecT>;
template struct vw::math::VectorAssignImpl<vw::math::Vector<DstElemT, 4>, SrcVecT>;
template struct vw::math::VectorBase<VectorT>;
template class  vw::math::VectorBinaryFunc<Vector1T, Vector2T, FuncT>;
template struct vw::math::VectorClearImpl<VectorT>;
template class  vw::math::VectorNoTmp<VectorT>;
template class  vw::math::VectorProxy<ElemT, 0>;
template class  vw::math::VectorProxy<ElemT, SizeN>;
template struct vw::math::VectorSize<VectorT>;
template class  vw::math::VectorTranspose<VectorT>;
template struct vw::math::VectorTranspose<const vw::math::MatrixVectorProduct<vw::math::Matrix<double, 0, 0>, const vw::math::VectorUnaryFunc<vw::math::Vector<double, 0>, vw::ValArgProductFunctor<double> >, true> >::VectorClosure<T>;
template struct vw::math::VectorTranspose<const vw::math::MatrixVectorProduct<vw::math::Matrix<double, 2, 2>, const vw::math::VectorUnaryFunc<vw::math::Vector<double, 2>, vw::ValArgProductFunctor<double> >, true> >::VectorClosure<T>;
template struct vw::math::VectorTranspose<const vw::math::VectorUnaryFunc<vw::math::Vector<double, 0>, vw::ValArgProductFunctor<double> > >::VectorClosure<T>;
template struct vw::math::VectorTranspose<const vw::math::VectorUnaryFunc<vw::math::Vector<double, 2>, vw::ValArgProductFunctor<double> > >::VectorClosure<T>;
template struct vw::math::VectorTranspose<vw::math::Vector<double, 0> >::VectorClosure<T>;
template struct vw::math::VectorTranspose<vw::math::Vector<double, 2> >::VectorClosure<T>;
template class  vw::math::VectorUnaryFunc<VectorT, FuncT>;
