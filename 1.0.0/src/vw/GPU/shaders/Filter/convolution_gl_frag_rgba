
uniform sampler2DRect image;
uniform sampler2DRect kernel;
uniform float hHalfSize;
uniform float vHalfSize;

void main() {
 int hSize = $1;
 int vSize = $2;
 vec2 startCoord = gl_TexCoord[0].st + vec2(hHalfSize, vHalfSize);
 vec4 sum = vec4(0.0);
 for(int vKernel = 0; vKernel < vSize; vKernel++) {
    for(int hKernel = 0; hKernel < hSize; hKernel++) {
	float kernelValue = texture2DRect(kernel, vec2(float(hKernel), float(vKernel))).r;
	sum += kernelValue * texture2DRect(image, vec2(startCoord.s - float(hKernel), startCoord.t - float(vKernel))).rgba;
    }
 }
 gl_FragColor.rgba = sum;
}
