*** RELEASE 1.0.1, 2 FEBRUARY 2006 ***

Renamed the *EdgeExtend classes and header files to *EdgeExtension,
for grammatical consistency.

Minor bugfixes and improvements to PNG, TIFF, and PDS file I/O,
georeferencing, image compositing and quad-tree generation, the CAHVOR
camera model, image transformations, the interpolation views, and the
Vision Workbook.

Added the ImageResource base class to support generalized image I/O.
Renamed GenericImageFormat and GenericImageBuffer to ImageFormat and
ImageBuffer.  Added ImageResourceView to support view-based operations
on general resources.  Reworked the DiskImageResource and
DiskImageView subsystem accordingly.

Added support for user-supplied error handlers to be called in place
of the usual exception-throwing.  If the Vision Workbench is
configured with exceptions disabled, the default handler prints the
error text and calls abort().

Added the ability to generate KML "super-overlays" to the quad- tree
generator in the Mosaic module, and added an example command-line tool
called "image2kml".  (Depends on the Cartography module, and therefore 
requires PROJ.4 and GDAL.  See the README file for more info.)

Added the Nelder-Mead optimization algorithm.

Removed dependence of the Math code on Boost's uBLAS, whose excessive
template complexity was causing problems on some platforms.

Added camera_transform(), camera_linearize_transform(), and
identiy_matrix() convenience functions, as well as overloads to
translate() for fast integer-offset translations.

Added a generic pinhole camera model including Tsai lens distortion
support to the Camera module.

Some versions of LAPACK appear to return eigenvalues/vectors in a 
different order than others, which confuses the unit test fo eigen() 
right now.  If you see this error, do not worry about it.

On some platforms the Vision Workbench appears to behave strangely
when compiled with optimization turned off.  This is probably a bad
idea anyway, since the Vision Workbench relies on function inlining
for reasonable performance.

Under some unknown circumstances the Cache system appears to get
confused about how many resources are in use and may produce
unexpected warning messages or exhibit suboptimal cacheing behavior,
though it does not appear to leak memory or resources.

*** RELEASE 1.0.0, 4 DECEMBER 2006 ***

There are doubtless more issues than these, but these are the one's
we're aware of at this time!

Some parts of the code are more mature than others.  In particular 
the Cartography module is likely to undergo a major overhaul in the 
near future, so don't get to tied down to its current interface. 
We are more hopeful that we will be able to maintain nearly complete 
backwards compatability in the other modules.

Only the Core, Image, and to a lesser extend Math modules have
reasonably complete unit and regression testing in place.

Support for alpha channels is vague in some places.  The current 
pixel math schema makes linear interpolation of pixel data (e.g. 
gaussian filtering or image transformations) easy while making 
other image math (e.g. gamma correction) harder.  Other things, 
such as the image statistics code, may be horribly confused by 
images with alpha channels.

ConvolutionView and SeparableConvolutionView, used internally by 
many of the filter functions, may produce unexpected behavior when 
used to filter views that are already edge-extended.  A workaround 
is to rasterize your source image, including sufficient edge context, 
into a temporary ImageView buffer prior to filtering.

CropView, used internally by the crop() function among other places,
does not properly support floating-point offsets in all cases 
(notably when its rasterization function is in charge).

The ExifView in the Camera module does not report when a requested 
field is missing.

Many features of individual image file formats are not supported.
For example, PNG files with fewer than 8 bits per channel are not 
supported.  The TIFF image reader does not take advantage of 
colorimetric information included in the file when deducing the 
file's pixel type.

Much of the code has not been properly tested under Windows/MSVC.  
The Matrix outer product functions are disabled on that platform 
due to compiler issues.

The Vision Workbench does not compile under Debian Linux with the
Debian packages for boost and LAPACK.  We recommend installing boost
from source and installing LAPACK from the pre-packaged distribution
available on the Vision Workbench web site. 
